grammar sdu.mdsd.IoT with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate ioT "http://www.mdsd.sdu/IoT"

Model:
	deviceTypes+=DeviceDefinition*
	system=IoTSystem;

DeviceDefinition:
	'devicetype' name=ID
	implementations+=Implementation*;

Implementation:
	name=ID '(' params+=Parameter ( ',' params+=Parameter)* ')' ':'
	body=ImplBody

;

Parameter:
	name=ID (isArray?='[]')?
;
	
ImplBody:
	{ImplBody} 
	('import:' imports=STRING)?
	('setup:'setup=STRING)?
	('use:' use=STRING)?
	;





IoTSystem:
	{IoTSystem}
	externalDeclarations+=ExternalDeclaration*
	configs+=Config*
	devices+=Device*;

QualifiedName: ID ('.' ID)* ;

terminal IP returns ecore::EString:
	INT '.' INT '.' INT '.' INT; // IP
terminal WINDOWS_SERIAL returns ecore::EString:
	'COM' INT;

ExternalDeclaration:
	'external' name=ID // '(' type=STRING ')' // Commented out due to not being used
;

/*
 * Configurations
 */
Config:
	ConnectionConfig | DeviceConfig;

DeviceConfig returns Config:
	{DeviceConfig} 'deviceConfig' name=ID '{'
	declarations+=Declaration*
	'}';

ConnectionConfig returns Config:
	{ConnectionConfig} 'connectionConfig' name=ID '{'
	'type' ':' type=ConfigType
	declarations+=Declaration*
	'}';

ConfigType:
	'SERIAL' | 'WLAN';

Declaration:
	key=STRING ':' value=STRING;

	/*
 * Device 
 */
Device:
	importedNamespace=QualifiedNameWithWildCard 'device' name=ID '{'
	program=Program
	'}';

QualifiedNameWithWildCard:
	
QualifiedName '.*'? 
;

Program:
	{Program} topLevelCommands+= TopLevelCommand*
	
;

TopLevelCommand:
	Command | Number | StringValue
;

StringValue:
	value=STRING
;

Number:
	value=INT
;

Argument:
	param=[Parameter] '=' (value=TopLevelCommand)
;



Command:
	template=[Implementation] '('args+=Argument (',' args+=Argument )* ')'
;



